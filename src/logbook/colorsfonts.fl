# data file for the Fltk User Interface Designer (fluid)
version 1.0304
i18n_type 1
i18n_include "gettext.h"
i18n_function _
header_name {.h}
code_name {.cxx}
decl {\#include <config.h>} {private global
}

decl {\#include "fllog.h"} {private local
}

decl {\#include "status.h"} {private global
}

decl {\#include "font_browser.h"} {public global
}

decl {\#include <FL/Fl_Color_Chooser.H>} {private local
}

decl {\#include <FL/fl_show_colormap.H>} {private local
}

Function {cbLOGBOOKFontBrowser(Fl_Widget*, void*)} {open private return_type void
} {
  code {Fl_Font font = font_browser->fontNumber();
    int size = font_browser->fontSize();
    Fl_Color color = font_browser->fontColor();

    progStatus.LOGBOOKtextfont = font;
    progStatus.LOGBOOKtextsize = size;
    progStatus.LOGBOOKtextcolor = color;

    LOGBOOKdisplay->textsize(size);
    LOGBOOKdisplay->textcolor(color);
    LOGBOOKdisplay->textfont(font);
    LOGBOOKdisplay->redraw();
    
    LOGBOOK_colors_font();

    font_browser->hide();} {}
}

Function {make_config_items()} {open
} {
  code {font_browser = new Font_Browser;} {}
  Fl_Window dlgConfigItems {
    label {Configuration Items} open
    xywh {566 166 375 255} type Double
    code0 {dlgConfigItems->xclass(PACKAGE_TARNAME);} visible
  } {
    Fl_Group {} {
      label {Log Table} open
      xywh {2 2 371 65} box ENGRAVED_FRAME align 21
    } {
      Fl_Check_Button btnBrowseTimeOFF {
        label {Browse Time OFF}
        callback {progStatus.BrowseTimeOFF = o->value();
loadBrowser(true);}
        xywh {27 27 70 15} down_box DOWN_BOX
        code0 {\#include "logsupport.h"}
        code1 {o->value(progStatus.BrowseTimeOFF);}
      }
    }
    Fl_Group {} {
      label {Control Fonts / Colors} open
      xywh {2 70 371 65} box ENGRAVED_FRAME align 21
    } {
      Fl_Output LOGBOOKdisplay {
        xywh {17 94 98 25}
        code0 {o->textfont(progStatus.LOGBOOKtextfont);o->textsize(progStatus.LOGBOOKtextsize);o->textcolor(progStatus.LOGBOOKtextcolor);}
        code1 {o->color(progStatus.LOGBOOKcolor);}
        code2 {o->value("W3NR/4");}
        code3 {o->redraw();}
      }
      Fl_Button btnLOGBOOK_color {
        label {Bg Color}
        callback {uchar r, g, b;
    Fl::get_color(progStatus.LOGBOOKcolor, r, g, b);

    if (!fl_color_chooser("Background", r, g, b))
        return;

    progStatus.LOGBOOKcolor = fl_rgb_color(r, g, b);
    
    LOGBOOKdisplay->color(progStatus.LOGBOOKcolor);
    LOGBOOKdisplay->redraw();

    LOGBOOK_colors_font();}
        xywh {125 94 80 25}
      }
      Fl_Button btn_LOGBOOK_font {
        label Font
        callback {font_browser->fontNumber(progStatus.LOGBOOKtextfont);
font_browser->fontSize(progStatus.LOGBOOKtextsize);
font_browser->fontColor(progStatus.LOGBOOKtextcolor);
font_browser->fontFilter(Font_Browser::ALL_TYPES);
font_browser->callback(cbLOGBOOKFontBrowser);
font_browser->show();}
        xywh {215 94 55 25}
      }
      Fl_Button btnLOGBOOKdefault_colors_font {
        label Default
        callback {progStatus.LOGBOOKcolor = FL_BACKGROUND2_COLOR;
progStatus.LOGBOOKtextfont = (Fl_Font)0;
progStatus.LOGBOOKtextsize = 12;
progStatus.LOGBOOKtextcolor = FL_BLACK;

LOGBOOKdisplay->color(progStatus.LOGBOOKcolor);
LOGBOOKdisplay->textsize(progStatus.LOGBOOKtextsize);
LOGBOOKdisplay->textcolor(progStatus.LOGBOOKtextcolor);
LOGBOOKdisplay->textfont(progStatus.LOGBOOKtextfont);
LOGBOOKdisplay->redraw();
    
LOGBOOK_colors_font();}
        xywh {281 94 80 25}
      }
    }
    Fl_Button btnClrFntClose {
      label Close
      callback {o->window()->hide();}
      xywh {281 223 80 25}
    }
    Fl_Group {} {
      label Station open
      xywh {2 136 371 79} box ENGRAVED_BOX align 21
    } {
      Fl_Input inp_mycall {
        label {Sta Call}
        callback {progStatus.mycall = o->value();
for (size_t n = 0; n < progStatus.mycall.length(); n++)
progStatus.mycall[n] = toupper(progStatus.mycall[n]);
o->value(progStatus.mycall.c_str());} selected
        tooltip {My station call sign} xywh {140 148 80 24}
        code0 {o->value(progStatus.mycall.c_str());}
        class Fl_Input2
      }
      Fl_Input inp_opcall {
        label {Op Call}
        callback {progStatus.opcall = o->value();
for (size_t n = 0; n < progStatus.opcall.length(); n++)
progStatus.opcall[n] = toupper(progStatus.opcall[n]);
o->value(progStatus.opcall.c_str());}
        tooltip {Operator call sign} xywh {281 148 69 24}
        code0 {o->value(progStatus.opcall.c_str());}
        class Fl_Input2
      }
      Fl_Input inp_my_staqth {
        label {Sta QTH}
        callback {progStatus.my_staqth = o->value();}
        tooltip {My station call sign} xywh {70 181 150 24}
        code0 {o->value(progStatus.my_staqth.c_str());}
        class Fl_Input2
      }
      Fl_Input inp_my_staloc {
        label {Sta Loc}
        callback {progStatus.my_staloc = o->value();}
        tooltip {Operator call sign} xywh {281 181 69 24}
        code0 {o->value(progStatus.my_staloc.c_str());}
        class Fl_Input2
      }
    }
  }
}
